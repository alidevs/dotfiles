;;;;;;
; CPU Metric
;;;;;;

(defvar cpu_reveal true)
(defwidget cpu_meter []
    (eventbox
        :onhover "eww update cpu_reveal=true"
        :onhoverlost "eww update cpu_reveal=false"
        (box
            :class "metric left"
            :space-evenly false
            (revealer
                :transition "slideleft"
                :reveal {cpu_reveal}
                :duration "350ms"
                (box :space-evenly false
                    (scale
                        :min 0
                        :max 100
                        :active false
                        :flipped true
                        :value {EWW_CPU.avg}
                    )
                    (label :class "value" :text "${round(EWW_CPU.avg, 1)}%")
                )
            )
            (box 
                :class "label"
                (image 
                    :path "images/icons/cpu.svg"
                    :image-height 20 :image-width 20
                )
            )
        )
    )
)


;;;;;;
; Workspace Switcher
;;;;;;

(defvar workspaces "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]")
(defpoll current_ws
    :interval "50ms"
    `i3-msg -t get_workspaces | jq -r '.[] | select(.focused).name'`)
(defwidget workspace_switcher []
    (box :class "button_panel" :orientation "h"
        (for ws in workspaces
            (button 
                :class "btn ${ws == current_ws ? "active" : ""}"
                :onclick "i3-msg workspace ${ws}"
                ws
            )
        )
    )
)

;;;;;;
;; Pacman
;;;;;;

(defpoll UPDATES :interval "2m" `checkupdates | wc -l`)
(defwidget pacman []
    (box :class "panel pacman"
        (label
            :text {UPDATES}
            :class "label"
        )
        (image
            :path "images/icons/pacman.svg"
            :image-width 20 :image-height 20
        )
    )
)
;;;;;;
; Clock
;;;;;;

(defpoll time :interval "1s" `date '+%H:%M:%S'`)
(defwidget clock []
    (box :class "panel clock"
        (label
            :text {time}
            :class "label"
        )
    )
)

(defwindow bar :monitor 0 :windowtype "dock" :wm-ignore false :stacking "fg"
    :geometry (geometry 
        :x "0%" 
        :y "0%"
        :width "100%"
        :height "30px"
        :anchor "top center"
    )
    :reserve (struts
        :distance "30px"
        :side "top"
    )
    (centerbox :orientation "h"
        (box 
            :class "main"
            :spacing "10"
            :space-evenly false
            :halign "start"
            (workspace_switcher)
        )
        (box :class "main" :spacing "10" :space-evenly false :hexpand true)
        (box :class "main" :spacing "10" :space-evenly false :halign "end"
            (pacman)
            (cpu_meter)
            (clock)
        )
    )
)
